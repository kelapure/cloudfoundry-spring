<?xml version="1.0"?>
<maven2-moduleset plugin="maven-plugin@1.480.2.4">
  <actions/>
  <description> The Cloud Foundry/Spring Source springmvc-hibernate sample application (https://github.com/cloudfoundry-samples/springmvc-hibernate-template) <br/> Builds using Spring 3.1 with PostgreSQL 9.0 and Redis 2.2: deploys to springmvc-hibernate-${CLOUDBEES_ACCOUNT}.cloudfoundry.com
</description>
  <logRotator>
    <daysToKeep>60</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>20</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <nectar.plugins.rbac.groups.JobProxyGroupContainer plugin="nectar-rbac@3.4">
      <groups/>
    </nectar.plugins.rbac.groups.JobProxyGroupContainer>
    <com.cloudbees.jenkins.plugins.PublicKey plugin="cloudbees-public-key@1.1"/>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@1.1.26">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name/>
        <refspec/>
        <url> ${repositoryUrl} </url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>**</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>false</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <useShallowClone>false</useShallowClone>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <excludedRegions/>
    <excludedUsers/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <includedRegions/>
    <scmName/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(Default)</jdk>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <rootModule>
    <groupId>org.cloudfoundry.templates</groupId>
    <artifactId>springmvc31</artifactId>
  </rootModule>
  <aggregatorStyleBuild>true</aggregatorStyleBuild>
  <incrementalBuild>false</incrementalBuild>
  <perModuleEmail>true</perModuleEmail>
  <ignoreUpstremChanges>false</ignoreUpstremChanges>
  <archivingDisabled>false</archivingDisabled>
  <resolveDependencies>false</resolveDependencies>
  <processPlugins>false</processPlugins>
  <mavenValidationLevel>-1</mavenValidationLevel>
  <runHeadless>false</runHeadless>
  <settingConfigId/>
  <globalSettingConfigId/>
  <reporters/>
  <publishers>
    <com.cloudbees.plugins.deployer.DeployPublisher plugin="cloudbees-deployer-plugin@4.1">
      <deployIfUnstable>false</deployIfUnstable>
      <hosts>
        <com.cloudbees.plugins.deployer.impl.cloudfoundry.HostImpl plugin="cloudfoundry-deploy-engine@1.1">
          <targets class="java.util.Collections$UnmodifiableRandomAccessList" resolves-to="java.util.Collections$UnmodifiableList">
            <c class="list">
              <com.cloudbees.plugins.deployer.impl.cloudfoundry.TargetImpl>
                <artifact class="com.cloudbees.plugins.deployer.sources.MavenArtifactDeploySource" plugin="cloudbees-deployer-plugin@4.1">
                  <groupId>org.cloudfoundry.templates</groupId>
                  <artifactId>springmvc31</artifactId>
                  <type>war</type>
                </artifact>
                <url> ${applicationName}-${CLOUDBEES_ACCOUNT}.cloudfoundry.com </url>
                <runtime>java</runtime>
                <name>${applicationName}</name>
                <memory>512</memory>
                <instances>1</instances>
                <framework>java_web</framework>
                <command/>
                <start>true</start>
                <environmentVariables/>
                <services>
                  <com.cloudbees.plugins.deployer.impl.cloudfoundry.TargetImpl_-AppService>
                    <name>postgresql-${applicationName}</name>
                    <service>postgresql</service>
                    <version>9.0</version>
                  </com.cloudbees.plugins.deployer.impl.cloudfoundry.TargetImpl_-AppService>
                  <com.cloudbees.plugins.deployer.impl.cloudfoundry.TargetImpl_-AppService>
                    <name>redis-${applicationName}</name>
                    <service>redis</service>
                    <version>2.2</version>
                  </com.cloudbees.plugins.deployer.impl.cloudfoundry.TargetImpl_-AppService>
                </services>
              </com.cloudbees.plugins.deployer.impl.cloudfoundry.TargetImpl>
            </c>
            <list reference="../c"/>
          </targets>
          <user>mqprichard@gmail.com</user>
          <cloud>https://api.cloudfoundry.com</cloud>
        </com.cloudbees.plugins.deployer.impl.cloudfoundry.HostImpl>
      </hosts>
    </com.cloudbees.plugins.deployer.DeployPublisher>
  </publishers>
  <buildWrappers/>
  <prebuilders>
    <hudson.tasks.Shell>
      <command> #Create CLOUDBEES_ACCOUNT.properties with account name for Cloud Foundry Deployment Hostname #This will be injected into the build and used by the CloudBees Deployer plugin to specify a globally-unique name echo -n CLOUDBEES_ACCOUNT= &gt; CLOUDBEES_ACCOUNT.properties echo `echo $JENKINS_URL | awk -F'.' '{print $1}' | sed 's/https:\/\///g'` &gt;&gt; CLOUDBEES_ACCOUNT.properties </command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@1.80">
      <info>
        <propertiesFilePath>CLOUDBEES_ACCOUNT.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </prebuilders>
  <postbuilders/>
  <runPostStepsIfResult>
    <name>SUCCESS</name>
    <ordinal>0</ordinal>
    <color>BLUE</color>
  </runPostStepsIfResult>
</maven2-moduleset>
